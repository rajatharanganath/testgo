pipeline:
  name: DockerImagerCreationPipeline
  identifier: DockerImagerCreationPipeline
  projectIdentifier: RajathaTest2
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: build
        identifier: build
        type: CI
        spec:
          cloneCodebase: false
          execution:
            steps:
              - step:
                  type: Run
                  name: run
                  identifier: run
                  spec:
                    connectorRef: dockerrajatha
                    image: alpine:latest
                    shell: Sh
                    command: |
                      touch harnessDockerfileui
                      cat > harnessDockerfileui <<- EOM
                      FROM alpine:latest AS dev-env
                      ARG foo
                      RUN echo "$foo bar"
                      ENTRYPOINT ["pwd"]

                      FROM alpine:latest AS release-env
                      ARG hello
                      RUN echo "$hello world"
                      ENTRYPOINT ["ls"]
                      EOM
                      cat harnessDockerfileui
              - step:
                  type: BuildAndPushDockerRegistry
                  name: build and push
                  identifier: build_and_push
                  spec:
                    connectorRef: dockerrajatha
                    repo: <+input>
                    tags:
                      - latest
                    dockerfile: harnessDockerfileui
              - step:
                  type: Run
                  name: Run_2
                  identifier: Run_2
                  spec:
                    shell: Sh
                    command: ls -ltr *
              - step:
                  type: Security
                  name: Security_1
                  identifier: Security_1
                  spec:
                    privileged: true
                    settings:
                      policy_type: orchestratedScan
                      scan_type: repository
                      product_name: aqua-trivy
                      product_config_name: aqua-trivy
                    imagePullPolicy: Never
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        variables:
          - name: PLUGIN_DRY_RUN
            type: String
            description: ""
            value: "true"
